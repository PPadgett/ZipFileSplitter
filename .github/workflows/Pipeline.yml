name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup PowerShell
        uses: actions/setup-powershell@v2

      - name: Install Dependencies
        shell: pwsh
        run: |
          Write-Output "Installing required PowerShell modules..."
          # Install Pester for running tests
          if (-not (Get-Module -ListAvailable -Name Pester)) {
              Install-Module -Name Pester -Force -Scope CurrentUser
          }
          # Install PSScriptAnalyzer for linting
          if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
              Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
          }
          Write-Output "Dependencies installed."

      - name: PowerShell Syntax Test
        shell: pwsh
        run: |
          Write-Output "Performing syntax check for module files..."
          Get-ChildItem -Path .\*.psm1 -Recurse | ForEach-Object {
            $syntaxErrors = $null
            $null = [System.Management.Automation.PSParser]::Tokenize((Get-Content -Path $_.FullName -Raw), [ref]$syntaxErrors)
            if ($syntaxErrors.Count -gt 0) {
              $syntaxErrors | ForEach-Object { Write-Host "Syntax error in file $($_.File): Line $($_.StartLine) - $($_.Message)" }
              throw "Syntax check failed."
            }
          }
          Write-Output "Syntax check passed."

      - name: Lint Testing with PSScriptAnalyzer
        shell: pwsh
        run: |
          Write-Output "Running PSScriptAnalyzer linting..."
          $results = Invoke-ScriptAnalyzer -Path "$PWD\ZipFileSplitter.psm1" -Recurse -Severity Warning, Error
          if ($results.Count -gt 0) {
              Write-Output "PSScriptAnalyzer found issues:"
              $results | Format-Table -AutoSize
              throw "Linting failed."
          }
          else {
              Write-Output "No linting issues found."
          }

      - name: Run Pester Tests
        shell: pwsh
        run: |
          Write-Output "Importing module and running Pester tests..."
          Import-Module "$PWD\ZipFileSplitter.psm1"
          Invoke-Pester -Script "$PWD\Tests" -Output Detailed
